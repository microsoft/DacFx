trigger: none

pr: none

# Pipeline trigger - this pipeline will run whenever the 'DacFx Nuget - Nightly' pipeline finishes
resources:
  pipelines:
  - pipeline: 'github-build-test-nightly'
    source: 'DacFx Nuget - Nightly'
    trigger: true

variables:
  solution: '**/*.sln'
  configuration: 'Debug'
  dacFxPackagePattern: 'Microsoft.SqlServer.DacFx*-preview.nupkg'
  dacFxPackagePath: '$(Pipeline.Workspace)/pkg'  # DacFx nupkg will be downloaded from nightly build and placed here

stages:
- stage: Build
  displayName: 'Nightly Build Test'

  jobs:
  - job: BuildTest
    displayName: 'Build and Test on'

    # Verifies cross-platform build and test
    strategy:
      matrix:
        linux:
          imageName: 'ubuntu-latest'
        mac:
          imageName: 'macos-latest'
        windows:
          imageName: 'windows-latest'

    pool:
      vmImage: '$(imageName)'

    workspace:
      clean: all

    steps:
    - task: DownloadPipelineArtifact@2
      displayName: 'Download Pipeline Artifact'
      inputs:
        buildType: 'specific'
        project: '$(azureProjectId)'
        definition: '$(azureSourcePipelineId)'
        buildVersionToDownload: 'latest'
        artifactName: 'drop'
        itemPattern: 'drop/$(dacFxPackagePattern)'
        targetPath: '$(dacFxPackagePath)'
    
    - script: 'dotnet nuget add source "$(dacFxPackagePath)"'
      displayName: 'Nuget Add Source to Path Containing DacFx Package'

    # Find the nupkg file inside dacFxPackagePath and parse it for the version
    - bash: |
        pattern="$(dacFxPackagePath)/$(dacFxPackagePattern)"
        files=( $pattern )
        nupkgFile=${files[0]}
        if test -f $nupkgFile; then
          echo "DacFx package found: $nupkgFile"
        else
          exit 1
        fi
        version=${nupkgFile/"*Microsoft.SqlServer.DacFx."/""}
        version=${version/".nupkg"/""}
        echo "##vso[task.setvariable variable=dacFxPackageVersion]$version"
      displayName: 'Extract Version from DacFx nupkg file'
      failOnStderr: true

    - template: 'template-steps-build-test.yml'
      parameters:
        solution: '$(solution)'
        configuration: '$(configuration)'
        nugetVersion: '1.0.0'
        runCodeSign: 'false'
        dacFxPackageVersion: '$(dacFxPackageVersion)'