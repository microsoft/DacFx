parameters:
  configuration: ''
  solution: ''
  nugetVersion: ''
  runCodeSign: ''
  # This is mainly used for test pipelines to get version from Nuget build pipelines
  # The version defined in the csproj will be used when this is not set
  dacFxPackageVersionArgument: ''

steps:
- task: UseDotNet@2
  displayName: 'Install .NET 3.1 SDK'
  inputs:
    version: '3.1.x'

- task: UseDotNet@2
  displayName: 'Install .NET 5 SDK'
  inputs:
    version: '5.x'

- task: UseDotNet@2
  displayName: 'Install .NET 6 SDK'
  inputs:
    version: '6.x'

- task: UseDotNet@2
  displayName: 'Install .NET 7 SDK'
  inputs:
    version: '7.x'
    includePreviewVersions: true

# Don't generate package so we can sign it before packaging
- task: DotNetCoreCLI@2
  displayName: '.NET Build'
  inputs:
    command: build
    projects: '${{ parameters.solution }}'
    arguments: '--configuration ${{ parameters.configuration }} -p:GeneratePackageOnBuild=false ${{ parameters.dacFxPackageVersionArgument }}'

# CodeSign is only run on release builds
- task: UseDotNet@2
  displayName: 'Install .NET Core SDK 2.1.x for CodeSign'
  condition: '${{ parameters.runCodeSign }}'
  inputs:
    version: '2.1.x'

# CodeSign DLLs included in the SDK
- task: EsrpCodeSigning@1
  displayName: 'ESRP CodeSigning - Binaries'
  condition: '${{ parameters.runCodeSign }}'
  inputs:
    ConnectedServiceName: 'Code Signing'
    FolderPath: '$(Build.SourcesDirectory)/src/Microsoft.Build.Sql/tools'
    Pattern: '*.dll'
    signConfigType: inlineSignParams
    inlineOperation: |
     [
       {
         "keyCode": "CP-230012",
         "operationSetCode": "SigntoolSign",
         "parameters": [
         {
           "parameterName": "OpusName",
           "parameterValue": "DacFx"
         },
         {
           "parameterName": "OpusInfo",
           "parameterValue": "https://github.com/microsoft/DacFx"
         },
         {
           "parameterName": "PageHash",
           "parameterValue": "/NPH"
         },
         {
           "parameterName": "FileDigest",
           "parameterValue": "/fd sha256"
         },
         {
           "parameterName": "TimeStamp",
           "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
         }
         ],
         "toolName": "signtool.exe",
         "toolVersion": "6.2.9304.0"
       },
       {
         "keyCode": "CP-230012",
         "operationSetCode": "SigntoolVerify",
         "parameters": [
         {
           "parameterName": "VerifyAll",
           "parameterValue": "/all"
         }
             ],
         "toolName": "signtool.exe",
         "toolVersion": "6.2.9304.0"
       }
     ]
    SessionTimeout: 600
    MaxConcurrency: 5

# Extra parameter GeneratePackageOnBuild=false is needed for issue https://github.com/dotnet/sdk/pull/3473#issuecomment-516612070
- task: DotNetCoreCLI@2
  displayName: '.NET Pack Nuget'
  inputs:
    command: custom
    custom: pack
    projects: '${{ parameters.solution }}'
    arguments: '--configuration ${{ parameters.configuration }} --output $(Build.ArtifactStagingDirectory) --no-build -p:NuspecProperties="version=${{ parameters.nugetVersion }}" -p:GeneratePackageOnBuild=false'

- task: DotNetCoreCLI@2
  displayName: '.NET Test'
  inputs:
    command: test
    projects: '${{ parameters.solution }}'
    arguments: '--configuration ${{ parameters.configuration }}'
  env:
    DOTNET_TOOL_PATH: '$(Agent.ToolsDirectory)/dotnet'