<?xml version="1.0" encoding="utf-8"?>
<!--
  Copyright (c) Microsoft Corporation. All rights reserved.
  Licensed under the MIT license.
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Default build configurations -->
  <PropertyGroup>
    <WarningLevel Condition=" '$(WarningLevel)' == '' ">4</WarningLevel>
    <TreatWarningsAsErrors Condition=" '$(TreatWarningsAsErrors)' == '' ">false</TreatWarningsAsErrors>
    <BuildScriptName Condition=" '$(BuildScriptName)' == '' ">$(MSBuildProjectName).sql</BuildScriptName>
    <DefineTrace Condition=" '$(DefineTrace)' == '' ">true</DefineTrace>
    <ErrorReport Condition=" '$(ErrorReport)' == '' ">prompt</ErrorReport>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <OutputPath Condition=" '$(OutputPath)' == '' ">bin\Release\</OutputPath>
    <DebugType Condition=" '$(DebugType)' == '' ">pdbonly</DebugType>
    <Optimize Condition=" '$(Optimize)' == '' ">true</Optimize>
    <DefineDebug Condition=" '$(DefineDebug)' == '' ">false</DefineDebug>
    <DebugSymbols Condition=" '$(DebugSymbols)' == '' ">false</DebugSymbols>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <OutputPath Condition=" '$(OutputPath)' == '' ">bin\Debug\</OutputPath>
    <DebugType Condition=" '$(DebugType)' == '' ">full</DebugType>
    <Optimize Condition=" '$(Optimize)' == '' ">false</Optimize>
    <DefineDebug Condition=" '$(DefineDebug)' == '' ">true</DefineDebug>
    <DebugSymbols Condition=" '$(DebugSymbols)' == '' ">true</DebugSymbols>
  </PropertyGroup>

  <!-- Pack target properties -->
  <PropertyGroup>
    <PackageType>$(PackageType);DACPAC</PackageType>
    <IsTool Condition="'$(IsTool)' == ''">true</IsTool>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.dacpac</AllowedOutputExtensionsInPackageBuildOutputFolder>

    <!-- Suppress NU5128 since SQL NuGet Packages have no target framework dependencies -->
    <NoWarn>$(NoWarn),NU5128</NoWarn>
  </PropertyGroup>

  <Target Name="CreateManifestResourceNames" />
  <!-- CoreCompile is a target inside target Build on Microsoft.Common.targets that is not implemented there but allows us to personalize our compile/build flow, while
    executing all the other targets inside Build regularly. We implement it before importing Common.targets because it's not implemented there, so it will not be
    overriden when importing the targets.
    -->
  <Target Name="CoreCompile" />

  <Import Condition="'$(NetCoreBuild)' == 'true'" Project="$(MSBuildThisFileDirectory)../tools/netstandard2.1/Microsoft.Data.Tools.Schema.SqlTasks.targets"/>
  <Import Condition="'$(NetCoreBuild)' != 'true' AND '$(SQLDBExtensionsRefPath)' != ''" Project="$(SQLDBExtensionsRefPath)\Microsoft.Data.Tools.Schema.SqlTasks.targets" />
  <Import Condition="'$(NetCoreBuild)' != 'true' AND '$(SQLDBExtensionsRefPath)' == ''" Project="$(MSBuildExtensionsPath)\Microsoft\VisualStudio\v$(VisualStudioVersion)\SSDT\Microsoft.Data.Tools.Schema.SqlTasks.targets" />
  
  <Import Condition="'$(NetCoreBuild)' == 'true'" Project="$(MSBuildSdksPath)/Microsoft.NET.Sdk/targets/Microsoft.NET.DefaultAssemblyInfo.targets" />
  <Import Condition="'$(NetCoreBuild)' == 'true'" Project="$(MSBuildSdksPath)/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets" />
  <Import Condition="'$(NetCoreBuild)' == 'true'" Project="$(MSBuildSdksPath)/NuGet.Build.Tasks.Pack/build/NuGet.Build.Tasks.Pack.targets" />

  <!-- Add dacpac file BuiltProjectOutputGroupOutput, so that it will get included in the NuGet package by the Pack target -->
  <Target Name="AddDacpacToBuiltProjectOutputGroupOutput" BeforeTargets="BuiltProjectOutputGroup">
    <ItemGroup>
      <BuiltProjectOutputGroupOutput Include="$(SqlTargetPath)" TargetPath="$(SqlTargetFile)" FinalOutputPath="$(SqlTargetPath)" />
    </ItemGroup>
  </Target>

  <ItemGroup>
    <!-- This is necessary for building on non-Windows platforms. -->
    <PackageReference Condition="'$(NetCoreBuild)' == 'true'" Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.0" PrivateAssets="All" IsImplicitlyDefined="true" />
  </ItemGroup>

  <ItemGroup>
    <!-- Remove files specified as PreDeploy, PostDeploy, and None scripts from build -->
    <Build Remove="@(PreDeploy)" />
    <Build Remove="@(PostDeploy)" />
    <Build Remove="@(None)" />
  </ItemGroup>

  <!-- Target to resolve package references into database references to the underlying DACPACs inside the packages -->
  <Target Name="ResolveDacpacPackageReferences" BeforeTargets="ResolveArtifactReferences">
    <ItemGroup>
      <_ResolvedDacpacPackageReference Include="%(PackageReference.Identity)">
        <!-- Get the resolved package path property in the format generated by Nuget restore -->
        <!-- https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.Commands/RestoreCommand/Utility/BuildAssetsUtils.cs#L763 -->
        <PackageId>@(PackageReference->'%(Identity)'->Replace('.', '_'))</PackageId>
        <PackagePath>$(Pkg%(_ResolvedDacpacPackageReference.PackageId))</PackagePath>
        <IsSystemDacpac>@(PackageReference->'%(Identity)'->StartsWith('microsoft.sqlserver.dacpacs', StringComparison.OrdinalIgnoreCase))</IsSystemDacpac>
        <IsMasterDacpac Condition="'%(_ResolvedDacpacPackageReference.IsSystemDacpac)' == 'true'">@(PackageReference->'%(Identity)'->EndsWith('master', StringComparison.OrdinalIgnoreCase))</IsMasterDacpac>
        <IsMsdbDacpac Condition="'%(_ResolvedDacpacPackageReference.IsSystemDacpac)' == 'true'">@(PackageReference->'%(Identity)'->EndsWith('msdb', StringComparison.OrdinalIgnoreCase))</IsMsdbDacpac>

        <!-- File name of the dacpac inside the package -->
        <DacpacName>%(PackageReference.DacpacName)</DacpacName>
        <DacpacName Condition="'%(_ResolvedDacpacPackageReference.DacpacName)' == '' And '%(_ResolvedDacpacPackageReference.IsMasterDacpac)' == 'true'">master</DacpacName>
        <DacpacName Condition="'%(_ResolvedDacpacPackageReference.DacpacName)' == '' And '%(_ResolvedDacpacPackageReference.IsMsdbDacpac)' == 'true'">msdb</DacpacName>
        <!-- Default to master for backwards compatibility with first versions of Microsoft.SqlServer.Dacpacs -->
        <DacpacName Condition="'%(_ResolvedDacpacPackageReference.DacpacName)' == '' And '%(_ResolvedDacpacPackageReference.IsSystemDacpac)' == 'true'">master</DacpacName>
        <DacpacName Condition="'%(_ResolvedDacpacPackageReference.DacpacName)' == ''">%(PackageReference.Identity)</DacpacName>

        <!-- Full resolved path to the dacpac file -->
        <HintPath>%(PackageReference.HintPath)</HintPath>
        <HintPath Condition="'%(_ResolvedDacpacPackageReference.HintPath)' == ''">%(_ResolvedDacpacPackageReference.PackagePath)/tools/%(_ResolvedDacpacPackageReference.DacpacName).dacpac</HintPath>

        <ServerSqlCmdVariable>%(PackageReference.ServerSqlCmdVariable)</ServerSqlCmdVariable>
        <DatabaseSqlCmdVariable>%(PackageReference.DatabaseSqlCmdVariable)</DatabaseSqlCmdVariable>
        <DatabaseVariableLiteralValue>%(PackageReference.DatabaseVariableLiteralValue)</DatabaseVariableLiteralValue>
        <DatabaseVariableLiteralValue Condition="'%(_ResolvedDacpacPackageReference.DatabaseVariableLiteralValue)' == '' And '%(_ResolvedDacpacPackageReference.IsMasterDacpac)' == 'true'">master</DatabaseVariableLiteralValue>
        <DatabaseVariableLiteralValue Condition="'%(_ResolvedDacpacPackageReference.DatabaseVariableLiteralValue)' == '' And '%(_ResolvedDacpacPackageReference.IsMsdbDacpac)' == 'true'">msdb</DatabaseVariableLiteralValue>
        <SuppressMissingDependenciesErrors>%(PackageReference.SuppressMissingDependenciesErrors)</SuppressMissingDependenciesErrors>
      </_ResolvedDacpacPackageReference>

      <ArtifactReference Include="@(_ResolvedDacpacPackageReference->'%(HintPath)')" Condition="Exists(%(_ResolvedDacpacPackageReference.HintPath))" />
    </ItemGroup>
  </Target>
</Project>
